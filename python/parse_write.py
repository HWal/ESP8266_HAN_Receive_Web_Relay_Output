###############################################################
# Parse dataframe objects from the NodeMCU webserver.         #
# Data generated by Kaifa MA304H3E AMS meter.                 #
#                                                             #
# The HTML table is parsed into a list containing one         #
# dataframe object, (one list element).                       #
#                                                             #
# Extracted values from the dataframes are saved to file      #
# on disk.                                                    #
#                                                             #
# This program is run on Raspberry Pi                         #
###############################################################

import pandas as pd
import time

folderName = "/home/pi/Python_AMS/Logs/"

def main(folderName):
    # Run loop forever
    while True:
        rows = columns = 0
        try:
            # Skip the first six rows of the webpage table
            dfs = pd.read_html('http://192.168.10.95', skiprows = 6)
            # rows, columns expected 21, 2
            rows, columns = dfs[0].shape
            # rows = len(dfs[0].index)
            # columns = len(dfs[0].columns)
            # Use date as file name
            fName = folderName + dfs[0].iloc[0][1] + ".txt"
            if rows == 21 and columns == 2:
                with open(fName, "a") as fp:
                    # Only write the first 19 rows to file
                    for z in range(0, 18, 1):
                        u = dfs[0].iloc[z][1]
                        fp.write(u + ",")
                    v = dfs[0].iloc[18][1]
                    fp.write(v + "\n")
                # Print date, time and active power to the terminal
                print(dfs[0].iloc[0][1] + " " + dfs[0].iloc[1][1] + \
                " Active power (W): " + dfs[0].iloc[5][1])
                time.sleep(10)
        except Exception as e:
            print e
            print "Something went wrong. Sorry."
            time.sleep(10)

if __name__ == '__main__':
  main(folderName)
